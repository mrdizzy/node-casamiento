<html>
    <head>

    <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/1.8.0/jquery-1.8.0.min.js" type="text/javascript"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min.js" type="text/javascript"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.2/backbone-min.js" type="text/javascript"></script>

    <script type="text/template" id="current_product_form">
        <form id="edit_product">
            <h1>{{ _id }}</h1>
            Price: <input type="text" name="price" value="{{ price ? price : ""}}"></input></p>
            <input type="submit">
        </form>
    </script>
    
<script type="text/javascript">

_.templateSettings = {
     evaluate : /\{\[([\s\S]+?)\]\}/g,
  interpolate : /\{\{(.+?)\}\}/g
};
var product_types = <%- JSON.stringify(product_types) %>;
var themes = <%- JSON.stringify(themes) %>;

$(function() {
    Backbone.Model.CouchDB = Backbone.Model.extend({
        host: "casamiento.iriscouch.com",
        database: "test_ebay",
        idAttribute: "_id",
        attachments: function() {
            if (this._attachments) {
                return this._attachments
            }
            else {
                this._attachments = _.map(Object.keys(this.get("_attachments")), function(a) {
                    var attachment = {
                        _id: a,
                        url: this.collection.url + "/" + this.id + "/attachments/" + a,
                        couch_url: this.host + "/" + this.database + "/" + this.id + "/" + a,
                        destroy: function() {
                            $.ajax({type: "DELETE", url: this.url});   
                        }
                    }
                    return attachment;
                }, this)
                return this._attachments
            }
        }
    });
    
    var Product = Backbone.Model.extend({
        
        idAttribute: "_id",
        productType: function() {
            this.product_type = this.product_type || this.id.split("-")[1]  
            return this.product_type;
        },
        theme: function() {
            this.theme = this.theme || this.id.split("-")[0]   
            return this.theme
        }
    });
    var Products = Backbone.Collection.extend({
        model: Product,
        url: '/products'
    });
    var products = new Products( <%- JSON.stringify(products) %> );
    var AttachmentView = Backbone.View.extend({
        events: {
            'click .destroy': 'destroy'
        },
        destroy: function() {
            this.model.destroy();
        },
        render: function() {
            this.$el.html("<li><a href=\"http://" + this.model.couch_url + "\">" + this.model._id + " </a> <a class=\"destroy\">destroy</a>")
            return this;
        }
    });
    
    var CurrentProductView = Backbone.View.extend({
        el: '#current_product',
        initialize: function() {
            this.collection.bind('reset', this.render, this);
            this.collection.bind('change', this.render, this);
        },
        events: { 
            'click input[type=submit]': 'sendForm'
        },
        sendForm: function(e) {
            e.preventDefault();
            this.collection.at(0).set({ price: this.$('input[name="price"]').val(), colours: this.$('input[name="colours"]').val()});
            this.collection.at(0).save({}, { success: function(a, b, c) {
                console.log(a,b,c)
            }});
        },
        render: function() {
            console.log("change");
            var result = _.template($('#current_product_form').html(), this.collection.at(0).toJSON());
            this.$el.html(result);
            return this;
        }
    })
    
    var CurrentProductCollection = Backbone.Collection.extend({});
    var current_product_collection = new CurrentProductCollection(products.at(0));
    var cpv = new CurrentProductView({
        collection: current_product_collection
    });
    var ProductView = Backbone.View.extend({
                events: { 'click': 'select' },
        select: function() {
             current_product_collection.reset(this.model);
        },
        render: function() {
            this.$el.html(this.model.id);
            return this;
        }
    });
    var ProductsView = Backbone.View.extend({
        el: '#products',
        render: function() {
            this.$el.empty();
            this.collection.forEach(function(product) {
                var productview = new ProductView({
                    model: product
                }).render().el
            this.$el.append(productview);
            }, this) 
            return this;
        }
    });
    cpv.render();

    new ProductsView({
        collection: products
    }).render();
})

</script>
</head>
<body>

<div id="products"></div>

<h2>Current Product:</h2>
<div id="current_product"></div>

</body>
</html>