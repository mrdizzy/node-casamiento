<html>
<head>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/handlebars.js/1.0.0.beta6/handlebars.min.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.2/backbone-min.js"></script>

<script type="text/javascript">

Handlebars.registerHelper("each_with_index", function(array, start, fn) {
    var buffer = "";
    for (var i = 0, j = array.length; i < j; i++) {
		var item = array[i];
		item.index = start +i+1; // stick an index property onto the item, starting with 1, may make configurable later
		buffer += fn(item); // show the inside of the block
	}
	return buffer; // return the finished buffer
});

Handlebars.registerHelper("each_item", function(array, start, fn) {
    var buffer = "";
    for (var i = 0, j = array.length; i < j; i++) {
		var item = array[i];

		// stick an index property onto the item, starting with 1, may make configurable later
		item.index = start +i+1;

		// show the inside of the block
		buffer += fn(item);
	}

	// return the finished buffer
	return buffer;

});
    
Handlebars.registerHelper('each_with_contiguous_index', function(start, items) {
    var buffer = "", handlebars_counter = start;
    items.forEach(function(item) {
        handlebars_counter++;
        buffer += "<Variable" + handlebars_counter + "><p>" + item.L_QTY + "</p></Variable" + handlebars_counter + ">";
        handlebars_counter++;
        buffer += "<Variable" + handlebars_counter + "><p>" + item.L_NAME + "</p></Variable" + handlebars_counter + ">";
        handlebars_counter++;
        buffer += "<Variable" + handlebars_counter + "><p>" + item.L_AMT + "</p></Variable" + handlebars_counter + ">";
        handlebars_counter++;        
        buffer += "<Variable" + handlebars_counter + "><p>" + item.L_AMT + "</p></Variable" + handlebars_counter + ">";
        handlebars_counter++;
    });
    return buffer;
});
</script>

<script type="text/template" id="xml_transactions_container"><?xml version="1.0" encoding="UTF-8"?>
<svg>
  <variableSets>
    <variableSet locked="none">
      <variables>
        <variable varName="Variable0" trait="textcontent"/>
        <variable varName="Variable1" trait="textcontent"/>
        <variable varName="Variable2" trait="textcontent"/>
        <variable varName="Variable3" trait="textcontent"/>
        <variable varName="Variable4" trait="textcontent"/>
        <variable varName="Variable5" trait="textcontent"/>
        <variable varName="Variable6" trait="textcontent"/>
        <variable varName="Variable7" trait="textcontent"/>
        <variable varName="Variable8" trait="textcontent"/>
        <variable varName="Variable9" trait="textcontent"/>
        <variable varName="Variable10" trait="textcontent"/>
        <variable varName="Variable11" trait="textcontent"/>
        <variable varName="Variable12" trait="textcontent"/>
        <variable varName="Variable13" trait="textcontent"/>
        <variable varName="Variable14" trait="textcontent"/>
        <variable varName="Variable15" trait="textcontent"/>
        <variable varName="Variable16" trait="textcontent"/>
        <variable varName="Variable17" trait="textcontent"/>
        <variable varName="Variable20" trait="textcontent"/>
        <variable varName="Variable21" trait="textcontent"/>   
        <variable varName="Variable22" trait="textcontent"/>        
        <variable varName="Variable23" trait="textcontent"/>
        <variable varName="Variable24" trait="textcontent"/>
        <variable varName="Variable25" trait="textcontent"/>        
        <variable varName="Variable26" trait="textcontent"/>
        <variable varName="Variable27" trait="textcontent"/>        
        <variable varName="Variable28" trait="textcontent"/>
        <variable varName="Variable29" trait="textcontent"/>
        <variable varName="Variable30" trait="textcontent"/>        
        <variable varName="Variable31" trait="textcontent"/>
        <variable varName="Variable32" trait="textcontent"/>        
        <variable varName="Variable33" trait="textcontent"/>
        <variable varName="Variable34" trait="textcontent"/>
        <variable varName="Variable200" trait="textcontent"/>
      </variables>
      
         <v:sampleDataSets xmlns:v="casamiento">
         {{#each_with_index transactions 100}}
        <v:sampleDataSet dataSetName="{{index}}">
         <Variable0><p>{{SHIPTONAME}}</p>
         <p>{{SHIPTOSTREET}}</p>
         <p>{{SHIPTOSTREET2}}</p>
         <p>{{SHIPTOCITY}}</p>
         <p>{{SHIPTOSTATE}}</p>
         <p>{{SHIPTOZIP}}</p>
         </Variable0>
         
         <Variable1><p>{{SHIPTONAME}}</p>
         <p>{{SHIPTOSTREET}}</p>
         <p>{{SHIPTOSTREET2}}</p>
         <p>{{SHIPTOCITY}}</p>
         <p>{{SHIPTOSTATE}}</p>
         <p>{{SHIPTOZIP}}</p>
         </Variable1>
         
         <Variable2><p>{{SHIPTONAME}}</p>
         <p>{{SHIPTOSTREET}}</p>
         <p>{{SHIPTOSTREET2}}</p>
         <p>{{SHIPTOCITY}}</p>
         <p>{{SHIPTOSTATE}}</p>
         <p>{{SHIPTOZIP}}</p>
         </Variable2>
         <Variable3><p>{{TRANSACTIONID}}</p></Variable3>
         
         <Variable4><p>{{ORDERTIME}}</p></Variable4>
         
         <Variable5><p>{{PAYERID}}</p></Variable5>
         {{#each_with_contiguous_index 19 items}}       
         {{/each_with_contiguous_index}}
         
         <Variable200><p>{{AMT}}</p></Variable200>
        </v:sampleDataSet>
        {{/each_with_index}}
        
      </v:sampleDataSets>
      </variableSet>
      </variableSets>
      </svg>

</script>

<script type="text/template" id="table">
        <tr>
            <th>Date</th>
            <th>Name</th>
            <th>payer ID</th>
            <th>Email</th>
            <th>Memo</th>
            <th>Items</th>
            <th>Amount</th>
        </tr>
</script>

<script type="text/template" id="row">
    <td>{{ORDERTIME}}</td>
    <td>{{SHIPTONAME}}</td>
    <td><input type="checkbox" value='{{TRANSACTIONID}}' />{{TRANSACTIONID}}</td>
    <td>{{email}}</td>
    <td>{{note}}</td>
    <td>
        {{#items}}
            {{L_QTY}}{{L_NAME}} {{L_AMT}} {{L_NUMBER}} {{item.L_NAME}}<br/>
        {{/items}}
    </td>
    <td>{{amount}}</td>
</script>

<script type="text/javascript">

var SelectedTransactions = Backbone.Collection.extend({model: Transaction});
var selected_transactions = new SelectedTransactions();

var Transaction = Backbone.Model.extend();
var Transactions = Backbone.Collection.extend({
    model: Transaction,
    url: '/paypal'
})

var transactions = new Transactions();
transactions.fetch();

var TransactionView = Backbone.View.extend({
    tagName: 'tr',
    events: {
        'click input[type=checkbox]': 'select'
    },
    select: function() {
        if (this.$('input[type=checkbox]').is(":checked")) {
            selected_transactions.add(this.model);   
        }
        else {
            selected_transactions.remove(this.model);   
        }
    },
    initialize: function() {
        this.model.bind('change', this.render, this);
    },
    render: function() {
        var row = Handlebars.compile($('#row').html())(this.model.toJSON());
        this.$el.html(row);
        return this;
    }
})

var TransactionsView = Backbone.View.extend({
    initialize: function() {
        this.collection.bind('reset', this.render, this);
    },
    tagName: 'table',
    render: function() {

        this.$el.html(Handlebars.compile($('#table').html())());

        var rows = []
        this.collection.forEach(function(t) {
            var row = new TransactionView({
                model: t
            }).render().el;
            rows.push(row);
        });
        $('tr', this.$el).after(rows);
        return this;
    }
});

$(function() {
    var SelectedTransactionsView = Backbone.View.extend({
        el: '#download',
        initialize: function() {
            this.collection.bind('add', this.render, this);
            this.collection.bind('remove', this.render, this);
        },
        render: function() {
            console.log("rendering");
            var that = this;
            var XMLTransactionsView = Handlebars.compile($('#xml_transactions_container').html())({
                transactions: that.collection.toJSON()
            });
            this.$el.attr("href", "data:application/octet-stream," + encodeURIComponent(XMLTransactionsView));
        }
    });
    var stv = new SelectedTransactionsView({
        collection: selected_transactions
    });
    var tv = new TransactionsView({
        collection: transactions
    });
    $('#transactions').html(tv.render().el);
})

</script>
<style type="text/css">
</style>
</head>

<body>
    <a href="" download="names.xml" id="download">Download</a>
    <div id="transactions"></div>
</body>
</html>