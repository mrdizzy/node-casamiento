<style type="text/css">
.item_image { vertical-align:top; padding-top:7em;}
label { font:normal 1.3em GaraI;text-align:right;display:block;width:27%;float:left;padding-right:2%;padding-top:0.4em; }
input[type=text] {text-align:center;font:normal 1.6em Gara;font-variant:small-caps;display:block; border:1px solid lightgrey;}
  input[type=text]:hover { background-color:#DDD; border:1px solid #000; }
  input[type=text]:focus { border:1px solid lightgrey; }
  input[type=text]:hover.guest_name { border:1px solid lightgrey;}
table {  border-collapse:collapse; }
  tr:first-child th { border-top:0;}
  td { border:1px dotted #000;font-family: "OS"; font-size:1em; color:#000; }

  th { border:1px dotted #000;text-align:center; border-bottom:1px solid #000; padding-top:1.5em;padding-bottom:1.5em;font: normal 0.9em "OS Condensed"; color:#000; margin:0;margin-bottom:0.5em;}
  td:first-child, th:first-child { border-left:0;}
  td:last-child, th:last-child { border-right:0;}

.change { width:4em;margin:0 auto;padding:0.5em;border-radius:6px;background-color:#BBB;color:white;padding-top:15px;padding-bottom:15px; margin-bottom:1em;}
.change:hover {cursor: pointer; background-color:black; }

img.monogram { padding:1em; opacity:0.3; border:1px solid transparent;}
img.monogram:hover { opacity:1; border:1px dotted black; cursor:pointer;}

.texture {  opacity: 0.3 }
.texture:hover { opacity: 1;}
.selected {opacity:1; }

ul.slidesjs-pagination { position:static;  top:160px; z-index:100;}
 .slidesjs-pagination li a.active {
          background-position:0 0px;
      }
.color_square { margin-left:1em;width:30px;height:30px;border-radius:5px;}
.color_label { margin-left:1em;text-indent:0;font:normal 1.2em GaraI;padding:0; margin-top:5px; }

.product_pagination li { display:block;float:left;border:1px solid transparent; }
.product_pagination li img { padding:0.5em; }
.product_pagination li:hover { border:1px solid black; }

ul { text-align:center }
ul li { padding:0.25em; }
ul li {display:inline-block; border: 1px solid transparent; padding:0.25em; margin:0.25em;}
ul li:hover { border: 1px solid black; }

.slidesjs-pagination li a { width:190px; height:0; padding-top:122px; display:inline-block; overflow:hidden; }

.slidesjs-pagination li a[data-slidesjs-item="0"] { background-image:url('/products/<%= id %>/attachments/thumb-1'); }
ul li a[data-slidesjs-item="1"] { background-image:url('/products/<%= id %>/attachments/thumb-2'); }
ul li a[data-slidesjs-item="2"] { background-image:url('/products/<%= id %>/attachments/thumb-3'); }
ul li a[data-slidesjs-item="3"] { background-image:url('/products/<%= id %>/attachments/thumb-4'); }
</style>
       
<script type="text/template" id="break">
  <td colspan="2">
    <div style="width:98%;padding-bottom:3em;margin:auto;margin-top:2em;">
      <div style="width:44%;float:left;margin-top:5px;border-top:1px solid black;"></div>
      <div style="width:11%;float:left;"><img src="/gfx/page_seperators/orna.png" style="width:50%;" /></div>
      <div style="width:44%;float:left;margin-top:5px;border-top:1px solid black;"></div>
    </div>
  </td>
</script>

<script type="text/template" id="cart_item">
  <td style="width:35%;" class="item_image">
    <span style="font: normal 2em TP; letter-spacing:0.25em;color:#000">%% name %%</span>
    <img src="/products/%% id %%/attachments/display-2.jpg" style="width:95%"/><br/>
    <img src="/gfx/product_types/small/name_place_small.png" style="width:120px">
  </td>
  <td style="width:65%;padding:0;margin:0" class="second_col"></td>
</script>
       
<script type="text/template" id="cart_item_table">
<table>
  <tr>
    <th>Card texture</th>
    <th>Card thickness</th>
    <th>Colours</th>
  </tr>
  
  
  <tr>
    <td style="width:50%">
          <div class="texture %% (texture == "plain") ? "selected" : "" %%" data-texture="plain" style="float:left;margin-left:1em;"><p><img src="/gfx/icons/plaine.png" style="width:2.5em"><br> Plain</p></div>
          <div class="texture %% (texture == "hammer") ? "selected" : "" %%" data-texture="hammer" style="float:left;margin-left:1em;"><p><img src="/gfx/icons/hammer.png" style="width:2.5em"><br> Hammered</p></div>
          <div class="texture %% (texture == "pearl") ? "selected" : "" %%" data-texture="pearl" style="float:left;margin-left:1em;"><p><img src="/gfx/icons/linen.png" style="width:2.5em"><br> Pearlescent</p></div>
          <div class="b1"></div>
    </td>
    <td style="width:20%"> 
      <div style="width:60%;margin:auto">
        <div class="weight" style="border-top:2px solid #666;"></div>
        <p>300gsm</p>
        <div class="weight" style="border-top:4px solid #666;"></div>
        <p>250gsm</p>
      </div>
    </td>
        
    <td style="text-align:center;width:30%">        
          
    %- colours.forEach(function(colour) { -%

      <div style="width:25%;float:left;margin-top:1em;">
          <div class="color_square" style="background-color:%% colour %%;"></div>
          <p class="color_label">%% colour %%</p>
      </div>
    %- }) -%
          <br/>
          <div class="change" style="clear:both">CHANGE</div></td>
    </tr>
    
    
    <tr>
      <th>Monogram style</th>
      <th colspan="2">Price</th>
    </tr>
    
    
    <tr>
      <td>
        <div>
          <img class="monogram_image" src="/gfx/m/%%monogram%%.png" style="width:95%"/><br/>
          <div class="change_monogram change">CHANGE</div>
        </div>
        <div style="padding-top:1em;padding-bottom:1em;font: normal 0.9em 'OS Condensed'; color:#000; margin:0;margin-bottom:0.5em;border-bottom:1px solid black;border-top:1px dotted black;">Monogram details
        </div>
    
        <label>First name:</label>
        <input type="text" value="Nicola" size="16"></input>
        
        <label>Second name:</label>
        <input type="text" value="Michael" size="16"></input>
        
        <label>Date:</label>
        <input type="text" style="float:left;" value="22" size="2"></input> 
        <input type="text" style="float:left;" value="September" size="10"></input> 
        <input type="text" value="2013" size="4"></input> 
        </div>
      </td>
        
      <td colspan="2" class="quantity_selector">
        <p style="text-align:center;font: normal 4em 'OS Light'"><span style="font-size:0.65em;vertical-align:top;">&pound;</span><span class="pound">2</span><span style="font-size:0.65em;vertical-align:text-top;" class="dec">.99</span></p>

        <div class="noUiSlider" style="margin-left:1%;width:84%;float:left;"></div>
        <div style="quantity;font:normal 1.3em OS" id="qty">%%quantity%%</div>
      </td>
    </tr>
    <tr>
    <th colspan="3"><img src="/gfx/guests.png" style="width:3em"/> Guests
    </th>
    <tr>
    <td colspan="3" class="guests">
    
   
    </td>
    </tr>
  </table>
</script>       
       
<div id="product_page_genesis"><img src="/gfx/logo/genesis_collection.png" style="width:285px;"/></div>


<div id="product_page">
<div id="product_section0">

<!-- SPECIFICATIONS -->

<div class="product_type spc">
        <div class="name_place_icon"><img src="/gfx/product_types/small/name_place_small.png" style="width:100%;"></div>
    </div>

    <div class="spc">
        <h1>Card Texture</h1>

        <div style="float:left;margin-left:1em;"><p><img src="/gfx/icons/hammer.png" style="width:2.5em"><br> Hammered</p></div>
        <div style="float:left;margin-left:1em;"><p><img src="/gfx/icons/plaine.png" style="width:2.5em"><br> Plain</p></div>
         <div style="float:left;margin-left:1em;"><p><img src="/gfx/icons/linen.png" style="width:2.5em"><br> Pearlescent</p></div>
        <div class="b1"></div>
    </div>

    <div class="spc">
        <h1>Thickness</h1>
        
        <div style="width:60%;margin:auto">
            <div class="weight" style="border-top:2px solid #666;"></div>
            <p>300gsm</p>
            <div class="weight" style="border-top:4px solid #666;"></div>
            <p>250gsm</p>
        </div>
    </div>

    <div class="spc">
        <h1>Product format</h1>
        <div style="margin:auto;text-align:center;">
        <div class="spec" style="width:90px"><img src="/gfx/specs/tent.png"></div></div>
    </div>
    
    <div class="spc">
        <h1>Monogram shown</h1>
        <img id="mono_2" style="width:100%" class="casamiento mono" src="http://www.casamiento.co.uk/gfx/m/<%= monogram %>.png">
    </div>
    <div class="spc"><h1>Colours shown</h1>
        <div id="colours-shown" style="margin-top:1em;float:left;">
        
        <% colours.forEach(function(colour) { %>
            <div style="float:left">
                <div class="casamiento" style="margin-left:1em;width:30px;height:30px;background-color:<%= colour %>;border-radius:5px;"></div>
                <p class="casamiento" style="margin-left:1em;text-indent:0;font:normal 1em GaraI;padding:0; margin-top:5px;"><%= colour %></p>
            </div>
        <% }) %>  
        
        </div>
        <div class="b1"></div>
    </div>
    <img src="/gfx/shell.png" />
</div>
<div id="product_section1">

    <h1 class="product_name" style="float:left"> <img src="/gfx/bullets/bullet_square_dots.png" /> <%= name %></h1>

    <div id="slides" style="clear:both">            
       <img src="/products/<%= _id %>/attachments/medium-1" />
       <img src="/products/<%= _id %>/attachments/medium-2" />
       <img src="/products/<%= _id %>/attachments/medium-3" />
       <img src="/products/<%= _id %>/attachments/medium-4" />
    </div>
  
</div>      
</div>
    
<div id="buy" style="float:right"></div>

<div id="cart_page" style="display:none">
<div style="margin-left:2em;margin-right:2em;border:1px solid black;border-top:0;";>
<div id="cart"  style="padding:2em;padding-top:3em;">

     <div class="b1"></div>
</div>
<div id="monograms"  style="display:none;clear:both;text-align:center;padding:2em;padding-top:3em;">
<% for(var i = 1; i < 17; i++) { %>

<div style="display:inline-block;width:235px;padding:1%">
<img src="/gfx/m/<%= i %>.png" class="monogram" id="monogram_<%= i %>" style="width:100%"/>
</div>

<% } %>
 </div>

</div>
</div>
<script>
// Prevent the JavaScript template delimiters interfering with the node express delimiters
_.templateSettings = {
  interpolate : /\%\%(.+?)\%\%/g,
  evaluate: /\%\-(.+?)\-\%/g
};

$(function(){
  $("#slides").slidesjs({ pagination: { active: true }, navigation: { active: false },
  play: { auto: true, interval: 3500, effect: "swap" },
  effect: { swap: {speed: 5000 }},
    width: 750, height: 479
  });
});

var Product = Backbone.Model.extend({});
var Items = Backbone.Collection.extend({});

// Model representing a cart

var Cart = Backbone.Model.extend({
  idAttribute: "_id",
  // Sets a context so we know which item we are editing/changing
  setContext: function(current_item) {
    this.context = current_item;
  },
  setMonogram: function(monogram) {
    this.context.set("monogram", monogram)      
  },
  initialize: function() {
    this.listenTo(this.get("items"), "add", this.updateCart)     
    this.listenTo(this.get("items"), "change", this.updateCart)  
    this.saving = 0;
  },
  // To update the cart we need to check if it is currently being 
  // saved, if so we need to wait for saving to complete before trying
  // to save it again
  updateCart: function(event) {
  console.log("sving")
    if (this.saving > 0) {
      this.saving = this.saving + 1;
    } else {
      this.saving = this.saving + 1;
      this.doSave();
    }
  },
  doSave: function() {
    var that = this;
    this.save(null, {
      error: function() {  }, 
      success: function() { 
      
      that.saving = that.saving - 1;
        if(that.saving > 0) {
          that.doSave();
        }
      }
    })
  },
  defaults: {
    items: new Items()      
  },
  parse: function(response, options) {
    response.items = new Items(response.items);
    return response;
  },
  urlRoot: '/cart'
});

var CartItemView = Backbone.View.extend({
    initialize: function() {
    _.bindAll(this, 'render', 'renderQuantity', 'renderTotal', 'renderMonogram', 'calculatePrice', 'renderGuests')
    this.model.on("change:quantity", this.renderQuantity)  
    this.model.on("change:quantity", this.calculatePrice) 
    this.model.on("change:quantity", this.renderGuests)  
    this.model.on("change:total", this.renderTotal)  
    this.model.on("change:texture", this.calculatePrice)
    this.model.on("change:monogram", this.renderMonogram) 
  },
  clickslider: function() {
    alert("click")
  },
  render: function() {
    var item_table_template = $('#cart_item_table').html();
    var compiled = _.template(item_table_template);
    var item_html = compiled(this.model.toJSON());
    this.$el.html(item_html)
    var that = this;
    this.$('.noUiSlider').noUiSlider({
        range: [10, 200]
       ,start: that.model.get("quantity")
       ,step: 5,
       slide: function(input) {
        that.$('#qty').html(that.$('.noUiSlider').val())
       },
       handles: 1
    });
    this.$('.noUiSlider a div').click(function() {
      that.model.set("quantity", that.$('.noUiSlider').val())
    })
    this.calculatePrice()
    this.renderTotal();
    this.renderGuests();
    return this;
  },
  renderMonogram: function() {
      this.$('.monogram_image').attr("src", "/gfx/m/" + this.model.get("monogram") + ".png")
  },
  renderTotal: function() {
  var total = this.model.get("total");
  var ary = total.toString().split(".");
  var pounds = ary[0];
  var dec = ary[1]
      this.$('span.pound').text(pounds);
      this.$('span.dec').text("." + dec);
  },
  renderGuests: function() {
      var html = "";
      var quantity = this.model.get("quantity")
      console.log(quantity)
      for(var i=0; i < quantity;i++) {
      var g = this.model.get("guests")[i]  ? this.model.get("guests")[i] : "Guest name&hellip;" 
      html = html + '<div style="width:25%;float:left;margin:0;padding:0;"><input data-name="' + i + '" class="guest_name" type="text" style="display:block;font:normal 1.6em GaraI;text-align:left;margin:0;border-bottom:0;border-left:0;" value="' + g + '"></input></div>'
     } 
      this.$('.guests').html(html)
  },
  renderQuantity: function() {
    this.$('#qty').html(this.model.get("quantity"))
  },
  calculatePrice: function() {
    var price = this.model.get("price") * this.model.get("quantity")
    var texture = this.model.get("texture");
    if(texture == "hammer") {
      price = ((10/100) * price) + price
    } else if (texture == "pearl") {
      price = ((15/100) * price) + price
    }
    var price = (price).toFixed(2)
    this.model.set("total", price)
  },
})

var ItemView = Backbone.View.extend({
  tagName: "tr",
  events: {
    "click .change_monogram": "changeMonogram",
    "click .texture": "changeTexture",
    "blur .guest_name": "updateGuestName"
  },
  updateGuestName: function(e) {
    var currentTarget = $(e.currentTarget);
    var id = currentTarget.data("name");
    var name = $(e.currentTarget).val();
    var guests = this.model.get("guests");
    guests[id] = name;
    this.model.set("guests", guests)
    
    this.model.trigger("change")
    console.log(this.model.get("guests"))
  },
  changeTexture: function(e) {
    var currentTarget = $(e.currentTarget);
    $('.texture').removeClass("selected")
    currentTarget.toggleClass("selected");  
    this.model.set("texture", currentTarget.data("texture"))
  },
  changeMonogram: function() {
    cart.setContext(this.model)    
    $('#cart').fadeOut(function() {
      $('#monograms').fadeIn()
   });
  },
  render: function() {
    var item_template = $('#cart_item').html();
    var compiled = _.template(item_template);
    var item_html = compiled(this.model.toJSON());
    
    this.$el.html(item_html);
    var cart_item_view = new CartItemView({model: this.model}).render().el
    
    $(cart_item_view).appendTo(this.$('td.second_col'));
    
    return this;
  }
});

// View listing the items in the cart, delegates to ItemView

var ItemsView = Backbone.View.extend({
  tagName: "table",
  attributes: { style: "border-collapse:collapse;border:1px dotted grey" },
  initialize: function() {
          this.listenTo(this.collection, "add", this.render)
          //this.listenTo(this.collection, "change", this.render)
  },
  render: function() {
     this.$el.empty();    
    
     var header = $('#cart_header').html();
     this.$el.html(header);
     this.collection.forEach(function(item) {
           this.$el.append(new ItemView({model: item}).render().el)
           this.$el.append("<tr>" + $('#break').html() + "</tr>")
     }, this);
      this.$el.append("</table>");
     return this;
  }
});

var PanelView = Backbone.View.extend({
  el: $('#product_page'),
  showCart: function() {
    $('#product_page_genesis').fadeOut();
    $('#buy').fadeOut();
    $('#nav').fadeOut();
    $('#product_page_genesis').fadeOut();
    $('#product_page').fadeOut(function() {
      $('#cart_page').fadeIn();
    })
  }
})

var MonogramView = Backbone.View.extend({
  el: $('#monograms'),
  events: {
          "click img": "selectMonogram"
  },
  selectMonogram: function(event) {
    var monogram = $(event.target).attr('id');
    var monogram_id = monogram.split("_")[1]
    cart.setMonogram(monogram_id)
    $('#monograms').fadeOut(function() {
      $('#cart').fadeIn()
    });
  }
})

var BuyButtonView = Backbone.View.extend({
  initialize: function() {
    this.setElement($('#buy'))
  },
  events: { 
    "click": "addToCart"
  },
  addToCart: function() {
    cart.get("items").add(thisProduct)
    pv.showCart();
  }
})

var ProductRouter = Backbone.Router.extend({
  routes: {
    "monograms": "chooseMonogram"
  }
});

// Setup and initialization

// Create a new cart or initialize an existing one
<% if (cart) { %>
  var cart = new Cart(<%- cart %>, { parse: true });
<% } else { %>
  var cart = new Cart({ parse: true }) 
<% }  %>

var thisProduct = new Product({id: "<%= _id %>", name: "<%= name %>", monogram: <%= monogram %>, colours: <%- JSON.stringify(colours) %>, quantity: 10, price: <%= price %>, guests: [], texture: "plain" });

var iv = new ItemsView({collection: cart.get("items")})
$('#cart').html(iv.render().el);
var mv = new MonogramView();
var pv = new PanelView({collection: cart.get("items") });
var bbv = new BuyButtonView();

var prr = new ProductRouter();
Backbone.history.start();
  </script>