<style type="text/css">

.tabbed_area { margin:0px;padding:0px;padding:8px; z-index:-5;}
ul.tabs { margin:0px; padding:0px; margin-top:5px; margin-bottom:6px; z-index:0}
ul.tabs li { margin:0px;padding:0px; list-style:none; display:inline; z-index:0;} 
ul.tabs li a { color:#000; margin:0px; padding:0px; padding:7px 14px 7px 14px; font:normal 1.1em "OS Light Italic"; text-decoration:none; border: 1px solid lightgrey; border-top-left-radius: 6px; border-bottom: 1px solid #000; border-top-right-radius: 6px; box-shadow:3px 3px 0 0 lightgrey;z-index:0}
ul.tabs li a:hover { border-color:#000; z-index:0;} 

ul.tabs li a.active { border:1px solid #000; font-weight:bold; border-bottom:1px solid white; position:relative;z-index:500; box-shadow:0 0 0 0;} 
/* COLOURS */
.a_colour { opacity:0.8;}
.a_colour:hover { opacity:1}
.colsqr { width:2.9em;height:2.9em;}
.colsqr img { width:100%; padding:0;border:0;}
.clrb { width:49%; float:left;border:1px dotted black; border-top:0;border-left:0;}
.clrb p:hover { font-weight:bold; }
.palette { display:none; clear:both; position:relative; border-radius:5px; box-shadow:5px 5px 0 0 lightgrey;}
.palette_1 { display:block;}
.chat-bubble {
  background-color:#fff;
  border:1px solid #000;
  font: normal 1.1em "OS Light Italic";
  margin:10px auto;
  padding:10px;
  position:absolute;
  text-align:center;
  width:350px;
  -moz-border-radius:10px;
  -webkit-border-radius:10px;
  box-shadow:5px 5px 0 0 lightgrey;
}

tr:first-child td { border-top:0;}
.chat-bubble-arrow-border {
  border-color:  transparent transparent #000 transparent;
  border-style: solid;
  border-width: 15px;
  height:0;
  width:0;
  position:absolute;
  top:-31px;
  left:120px;
}
.chat-bubble-arrow {
  border-color: transparent transparent white transparent;
  border-style: solid;
  border-width: 15px;
  height:0;
  width:0;
  position:absolute;
  top:-30px;
  left:120px;
}

label { font:normal 1em "OS Light Italic";text-align:right;display:block;width:27%;float:left;padding-right:2%;padding-top:0.4em; }
input[type=text] {text-align:center;font:normal 1.4em OS;display:block; border:1px solid #000;}
input[type=text]:hover { background-color:#DDD; border:1px solid lightgrey; }
input[type=text]:focus { border:1px solid lightgrey; }
input[type=text]:hover.guest_name { border:1px solid lightgrey;}

table {  border-collapse:collapse; }

    .item_image { vertical-align:top; padding-top:7em;}
  tr:first-child th { border-top:0;}
  td { border:1px dotted #000;font-family: "OS"; font-size:1em; color:#000; }

  th { border:1px dotted #000;text-align:center; border-bottom:1px solid #000; padding-top:1em;padding-bottom:1em;font: normal 0.9em "OS Condensed"; color:#000; margin:0;margin-bottom:0.5em;}
  td:first-child, th:first-child { border-left:0;}
  td:last-child, th:last-child { border-right:0;}

.change { padding:0.5em;border-radius:6px;background-color:#BBB;color:white;padding-top:15px;padding-bottom:15px; font-size:0.8em; float:left; margin-left:0.5em;}
.change:hover {cursor: pointer; background-color:black; }

img.monogram { padding:1em; opacity:0.3; border:1px solid transparent;}
img.monogram:hover { opacity:1; border:1px dotted black; cursor:pointer;}

.texture {  opacity: 0.3 }
.texture:hover { opacity: 1;}
.selected {opacity:1; }

ul.slidesjs-pagination { position:static;  top:160px; z-index:100;}
    .slidesjs-pagination li a.active { background-position:0 0px; }
    
.color_square { width:30px;height:30px;border-radius:5px;}
.color_label { text-indent:0;font:normal 1.2em GaraI;padding:0; margin-top:5px; }

.product_pagination li { display:block;float:left;border:1px solid transparent; }
.product_pagination li img { padding:0.5em; }
.product_pagination li:hover { border:1px solid black; }

ul { text-align:center }
ul li { padding:0.25em; }
ul li {display:inline-block; border: 1px solid transparent; padding:0.25em; margin:0.25em;}
ul li:hover { border: 1px solid black; }

.slidesjs-pagination li a { width:190px; height:0; padding-top:122px; display:inline-block; overflow:hidden; }

.slidesjs-pagination li a[data-slidesjs-item="0"] { background-image:url('/products/<%= id %>/attachments/thumb-1'); }
ul li a[data-slidesjs-item="1"] { background-image:url('/products/<%= id %>/attachments/thumb-2'); }
ul li a[data-slidesjs-item="2"] { background-image:url('/products/<%= id %>/attachments/thumb-3'); }
ul li a[data-slidesjs-item="3"] { background-image:url('/products/<%= id %>/attachments/thumb-4'); }
</style>
       
<script type="text/template" id="break">
  <td colspan="2">
    <div style="width:98%;padding-bottom:3em;margin:auto;margin-top:2em;">
      <div style="width:44%;float:left;margin-top:5px;border-top:1px solid black;"></div>
      <div style="width:11%;float:left;"><img src="/gfx/page_seperators/orna.png" style="width:50%;" /></div>
      <div style="width:44%;float:left;margin-top:5px;border-top:1px solid black;"></div>
    </div>
  </td>
</script>

<script type="text/template" id="cart_item">
  <td style="width:35%;" class="item_image">
    <span style="font: normal 2em TP; letter-spacing:0.25em;color:#000">%% name %%</span>
    <img class="product_image" style="background-color:%% colours[0] %%" src="/products/%% id %%/attachments/display-2.jpg" style="width:95%"/><br/>
    <img src="/gfx/product_types/small/name_place_small.png" style="width:120px">
  </td>
  <td style="width:65%;padding:0;margin:0;vertical-align:top;" class="second_col"></td>
</script>
       
<script type="text/template" id="cart_item_table">

<div class="colour_selector" style="display:none">
<div class="tabbed_area"> 
    <ul class="tabs"> 
        <li><a class="a_tab colour_label" data-colour="1" id="1_colours">Pinks</a></li> 
        <li><a class="a_tab colour_label active" data-colour="2" id="1_monograms">Reds</a></li> 
        <li><a class="a_tab colour_label" data-colour="3"  id="1_monograms">Purples</a></li> 
        <li><a class="a_tab colour_label" data-colour="4" id="1_monograms">Yellows</a></li> 
        
        <li><a class="a_tab colour_label" data-colour="5" id="1_monograms">Blues</a></li> 
        <li><a class="a_tab colour_label" data-colour="6" id="1_monograms">Greens</a></li> 
    </ul> 
    
    <% var counter = 0 %>
    <% cols.forEach(function(palette) { %>
    <% counter++ %>
        <div class="palette palette_<%= counter %>" style="z-index:100;background-color:white;border:1px dotted black;margin-top:0;padding-top:0;">
        <% palette.forEach(function(colour) { %>
        <% var ary = colour.split(" ") %>
        <% var hex = ary[0] %>
        <% var description = ary[1] %>
       <div class="a_colour" data-colour="<%= hex %>" style="width:30%;text-align:center;display:inline-block;padding-right:1em;padding-top:1em;">
       <div style="background-color:<%= hex %>;border-radius:4px;width:5em;height:4em;margin-bottom:0;padding-bottom:0;margin:0 auto;"></div><span style="margin-top:0;padding-top:0;color:black;font:1.2em normal 'Open Sans Light';"><%= description.toUpperCase() %></span>
       </div>
        <% }) %>
        </div>
    <% }) %>
    
 </div>
    

</div>

<table class="customise">
  <tr>
    <th>Card texture</th>
    <th>Card thickness</th>
    <th>Colours</th>
  </tr>
  
  
  <tr>
    <td style="width:50%" class="tooltip-select" data-tooltip="tooltip-texture">
          <div class="texture %% (texture == "plain") ? "selected" : "" %%" data-texture="plain" style="float:left;margin-left:1em;"><p><img src="/gfx/icons/plaine.png" style="width:2.5em"><br> Plain</p></div>
          <div class="texture %% (texture == "hammer") ? "selected" : "" %%" data-texture="hammer" style="float:left;margin-left:1em;"><p><img src="/gfx/icons/hammer.png" style="width:2.5em"><br> Hammered</p></div>
          <div class="texture %% (texture == "pearl") ? "selected" : "" %%" data-texture="pearl" style="float:left;margin-left:1em;"><p><img src="/gfx/icons/linen.png" style="width:2.5em"><br> Pearlescent</p></div>
          <div class="b1" style="position:relative;"></div><div class="chat-bubble tooltip-texture"  style="display:none;"><div class="chat-bubble-arrow-border"></div>
  <div class="chat-bubble-arrow"></div>Select the texture of the card by clicking on it so it is highlighted. The price will automatically update.
</div></div>
         
    </td>
    <td style="width:20%"> 
      <div style="width:60%;margin:auto">
        <div class="weight" style="border-top:2px solid #666;"></div>
        <p>300gsm</p>
        <div class="weight" style="border-top:4px solid #666;"></div>
        <p>250gsm</p>
      </div>
    </td>
        
    <td class="selected_colours" style="text-align:center;width:30%"></td>
    </tr>
    <tr>
      <th>Monogram style</th>
      <th colspan="2">Monogram details</th>
    </tr>
    
    
    <tr>
      <td>
          <img class="monogram_image" src="/gfx/m/%%monogram%%.png" style="width:95%"/><br/>
          <div class="change_monogram change">CHANGE</div>
      </td>
        <td colspan="2" class="tooltip-select" data-tooltip="tooltip-monodetails">
         <label>First name:</label>
        <input type="text" value="Nicola" size="16"></input>
        
        <label>Second name:</label>
        <input type="text" value="Michael" size="16"></input>
        
        <label>Date:</label>
        <input type="text" style="float:left;" value="22" size="2"></input> 
        <input type="text" style="float:left;" value="September" size="10"></input> 
        <input type="text" value="2013" size="4"></input> 
         <div style="position:relative;"></div><div class="chat-bubble tooltip-monodetails"  style="display:none;"><div class="chat-bubble-arrow-border"></div>
  <div class="chat-bubble-arrow"></div>A monogram is a motif featuring a name and initials. You can have one created for you and your partner, your baby or your loved on. A monogram will be created specially for you by a designer, so when you enter the details here it will not be reflected in the picture.
</div></div>
        </td>
        </tr>
        <tr>
        <th colspan="3">Price &amp; Quantity</th>
        </tr><tr>
      <td colspan="3" class="quantity_selector tooltip-select" data-tooltip="tooltip-quantity" style="padding-top:2em;padding-bottom:2em;">
        <p style="text-align:center;font: normal 4em 'OS Light'"><span style="font-size:0.65em;vertical-align:top;">&pound;</span><span class="pound">2</span><span style="font-size:0.65em;vertical-align:text-top;" class="dec">.99</span></p>

        <div class="noUiSlider" style="margin-left:4%;width:84%;float:left;margin-bottom:2em;"></div>
        <div style="quantity;font:normal 1.4em 'OS Light Italic'" id="qty">%%quantity%%</div>
        <div style="position:relative;"></div><div class="chat-bubble tooltip-quantity"  style="display:none;"><div class="chat-bubble-arrow-border"></div>
  <div class="chat-bubble-arrow"></div>Change the quantity by dragging the above slider left and right with your mouse or finger. You will see the price and quantity update
</div></div>
      </td>
    </tr>
    <tr>
    <th colspan="3"><img src="/gfx/guests.png" style="width:3em"/> Guests
   
    </th>
    <tr  class="tooltip-select" data-tooltip="tooltip-guests">
    <td colspan="3">
   
     <div style="position:relative;"></div><div class="chat-bubble tooltip-guests"  style="display:none;"><div class="chat-bubble-arrow-border"></div>
  <div class="chat-bubble-arrow"></div>Each place card will come individually printed with the name of each guest. Here you can add each guest name. Your names will be printed exactly as you type them, so make sure you use capital letters in the right places
</div></div>
<div class="guests"></div>
   
    </td>
    </tr>
  </table>
</script>       
       
<div id="product_page_genesis"><img src="/gfx/logo/genesis_collection.png" style="width:285px;"/></div>
<div id="product_page">

<div id="product_section1">

    <h1 class="product_name" style="float:left"> <img src="/gfx/bullets/bullet_square_dots.png" /> <%= name %></h1>

    <div id="slides" style="clear:both">            
       <img src="/products/<%= _id %>/attachments/medium-1" />
       <img src="/products/<%= _id %>/attachments/medium-2" />
       <img src="/products/<%= _id %>/attachments/medium-3" />
       <img src="/products/<%= _id %>/attachments/medium-4" />
    </div>
  
</div>    

<div id="product_section0">

<!-- SPECIFICATIONS -->

<div class="product_type spc">
        <div class="name_place_icon"><img src="/gfx/product_types/small/name_place_small.png" style="width:100%;"></div>
    </div>

    <div class="spc">
        <h1>Card Texture</h1>

        <div style="float:left;margin-left:1em;"><p><img src="/gfx/icons/hammer.png" style="width:2.5em"><br> Hammered</p></div>
        <div style="float:left;margin-left:1em;"><p><img src="/gfx/icons/plaine.png" style="width:2.5em"><br> Plain</p></div>
         <div style="float:left;margin-left:1em;"><p><img src="/gfx/icons/linen.png" style="width:2.5em"><br> Pearlescent</p></div>
        <div class="b1"></div>
    </div>

    <div class="spc">
        <h1>Thickness</h1>
        
        <div style="width:60%;margin:auto">
            <div class="weight" style="border-top:2px solid #666;"></div>
            <p>300gsm</p>
            <div class="weight" style="border-top:4px solid #666;"></div>
            <p>250gsm</p>
        </div>
    </div>

    <div class="spc">
        <h1>Product format</h1>
        <div style="margin:auto;text-align:center;">
        <div class="spec" style="width:90px"><img src="/gfx/specs/tent.png"></div></div>
    </div>
    
    <div class="spc">
<div id="buy"></div></div>
    <div class="spc">
        <h1>Monogram shown</h1>
        <img id="mono_2" style="width:100%" class="casamiento mono" src="http://www.casamiento.co.uk/gfx/m/<%= monogram %>.png">
    </div>
    <div class="spc"><h1>Colours shown</h1>
        <div id="colours-shown" style="margin-top:1em;float:left;">
        
        <% colours.forEach(function(colour) { %>
            <div style="float:left">
                <div class="casamiento" style="margin-left:1em;width:30px;height:30px;background-color:<%= colour %>;border-radius:5px;"></div>
                <p class="casamiento" style="margin-left:1em;text-indent:0;font:normal 1em GaraI;padding:0; margin-top:5px;"><%= colour %></p>
            </div>
        <% }) %>  
        
        </div>
        <div class="b1"></div>
    </div>
    <img src="/gfx/shell.png" />
</div>  
</div>
    

<div id="cart_page" style="display:none">
<div style="margin-left:2em;margin-right:2em;border:1px solid black;border-top:0;";>
<div id="cart"  style="padding:2em;padding-top:3em;">

     <div class="b1"></div>
</div>
<div id="monograms"  style="display:none;clear:both;text-align:center;padding:2em;padding-top:3em;">
<% for(var i = 1; i < 17; i++) { %>

<div style="display:inline-block;width:235px;padding:1%">
<img src="/gfx/m/<%= i %>.png" class="monogram" id="monogram_<%= i %>" style="width:100%"/>
</div>

<% } %>
 </div>

</div>
</div>


<script>
// Prevent the JavaScript template delimiters interfering with the node express delimiters
_.templateSettings = {
  interpolate : /\%\%(.+?)\%\%/g,
  evaluate: /\%\-(.+?)\-\%/g
};

$(function(){
  $("#slides").slidesjs({ pagination: { active: true }, navigation: { active: false },
  play: { auto: true, interval: 3500, effect: "swap" },
  effect: { swap: {speed: 5000 }},
    width: 750, height: 479
  });
});

var Product = Backbone.Model.extend({});
var Items = Backbone.Collection.extend({});

// Model representing a cart

var Cart = Backbone.Model.extend({
  idAttribute: "_id",
  // Sets a context so we know which item we are editing/changing
  setContext: function(current_item) {
    this.context = current_item;
  },
  setMonogram: function(monogram) {
    this.context.set("monogram", monogram)      
  },
  initialize: function() {
    this.listenTo(this.get("items"), "add", this.updateCart)     
    this.listenTo(this.get("items"), "change", this.updateCart)  
    this.saving = 0;
  },
  // To update the cart we need to check if it is currently being 
  // saved, if so we need to wait for saving to complete before trying
  // to save it again
  updateCart: function(event) {
  console.log("sving")
    if (this.saving > 0) {
      this.saving = this.saving + 1;
    } else {
      this.saving = this.saving + 1;
      this.doSave();
    }
  },
  doSave: function() {
    var that = this;
    this.save(null, {
      error: function() {  }, 
      success: function() { 
      
      that.saving = that.saving - 1;
        if(that.saving > 0) {
          that.doSave();
        }
      }
    })
  },
  defaults: {
    items: new Items()      
  },
  parse: function(response, options) {
    response.items = new Items(response.items);
    return response;
  },
  urlRoot: '/cart'
});

var CartItemView = Backbone.View.extend({
    initialize: function() {
    _.bindAll(this, 'render', 'renderQuantity', 'renderTotal', 'renderMonogram', 'calculatePrice', 'renderGuests', 'renderColour')
    this.model.on("change:quantity", this.renderQuantity)  
    this.model.on("change:quantity", this.calculatePrice) 
    this.model.on("change:quantity", this.renderGuests)  
    this.model.on("change:colour", this.renderColour)
    this.model.on("change:total", this.renderTotal)  
    this.model.on("change:texture", this.calculatePrice)
    this.model.on("change:monogram", this.renderMonogram) 
  },
  clickslider: function() {
    alert("click")
  },
  render: function() {
    var item_table_template = $('#cart_item_table').html();
    var compiled = _.template(item_table_template);
    var item_html = compiled(this.model.toJSON());
    this.$el.html(item_html)
    var that = this;
    this.$('.noUiSlider').noUiSlider({
        range: [10, 200]
       ,start: that.model.get("quantity")
       ,step: 5,
       slide: function(input) {
        that.$('#qty').html(that.$('.noUiSlider').val())
       },
       handles: 1
    });
    this.$('.noUiSlider a div').click(function() {
      that.model.set("quantity", that.$('.noUiSlider').val())
    })
    this.renderColour();
    this.calculatePrice()
    this.renderTotal();
    this.renderGuests();
    return this;
  },
  renderColour: function() {
            var html = "";
   this.model.get("colours").forEach(function(colour) {
        html = html + '<div style="float:left;clear:both;">'
            html = html +'<div class="color_square" style="background-color:' + colour + ';"></div>'
            html = html + '<p class="color_label">' +  colour + '</p>';
      html = html + '</div><div class="change colour_change">CHANGE</div>';
   }) 
          this.$('.selected_colours').html(html);
  },
  renderMonogram: function() {
      this.$('.monogram_image').attr("src", "/gfx/m/" + this.model.get("monogram") + ".png")
  },
  renderTotal: function() {
  var total = this.model.get("total");
  var ary = total.toString().split(".");
  var pounds = ary[0];
  var dec = ary[1]
      this.$('span.pound').text(pounds);
      this.$('span.dec').text("." + dec);
  },
  renderGuests: function() {
      var html = "<table>";
      var lists = _.groupBy(this.model.get("guests"), function(a, b){
        return Math.floor(b/3);
});
    lists = _.toArray(lists); //Added this to convert the returned object to an array.
      var i = 0;
      lists.forEach(function(row) {
        
        html = html + "<tr>"
        row.forEach(function(guest) {
          html = html + '<td><input data-name="' + i + '" class="guest_name" type="text" style="display:block;font:normal 1.2em \'OS Light Italic\';text-align:left;margin:0;border:0;width:100%;" value="' + (guest ? guest : "&hellip;") + '"></input></td>'
          i++;
        })
    html = html + "</tr>"
      
   
     })
     html = html + "</table>"
      this.$('.guests').html(html)
  },
  renderQuantity: function() {
    this.$('#qty').html(this.model.get("quantity"))
  },
  calculatePrice: function() {
    var price = this.model.get("price") * this.model.get("quantity")
    var texture = this.model.get("texture");
    if(texture == "hammer") {
      price = ((10/100) * price) + price
    } else if (texture == "pearl") {
      price = ((15/100) * price) + price
    }
    var price = (price).toFixed(2)
    this.model.set("total", price)
  },
})

var ItemView = Backbone.View.extend({
  tagName: "tr",
  events: {
    "mouseenter .tooltip-select": "showTooltip",
    "mouseleave .tooltip-select": "closeTooltip",
    "mouseenter .a_colour": "updateColour",
    "click .a_colour": "saveColour",
    "click .colour_label": "updatePalette",
    "click .change_monogram": "changeMonogram",
    "click .colour_change": "changeColour",
    "click .texture": "changeTexture",
    "blur .guest_name": "updateGuestName"
  },
  saveColour: function(e) {
  var that = this;
        var colours = this.model.get("colours");
        colours[0] = $(e.currentTarget).data("colour");
        this.model.set("colours", colours);
        this.model.trigger("change:colour");
       this.$('.colour_selector').fadeOut(function() {
      
    that.$('.customise').fadeIn();  
  });
      
  },
  updatePalette: function(e) {
      var which = $(e.currentTarget).data("colour")
      $('.colour_label').removeClass("active");
      
      $(e.currentTarget).addClass("active")
      this.$('.palette').hide();
     this.$('.palette_'+which).show();
  },
  showTooltip: function(e) {
    var which = $(e.currentTarget).data("tooltip")
          $('.' + which).fadeIn()
  },
  closeTooltip: function(e) {
       var which = $(e.currentTarget).data("tooltip")
          $('.' + which).fadeOut();
  },
  updateColour: function(e) {
  console.log("hover")
       var currentTarget = $(e.currentTarget);
    var hex = currentTarget.data("colour");
      this.$('.product_image').css("background-color", hex)
  },
  updateGuestName: function(e) {
    var currentTarget = $(e.currentTarget);
    var id = currentTarget.data("name");
    var name = $(e.currentTarget).val();
    var guests = this.model.get("guests");
    guests[id] = name;
    this.model.set("guests", guests)
    
    this.model.trigger("change")
    console.log(this.model.get("guests"))
  },
  changeTexture: function(e) {
    var currentTarget = $(e.currentTarget);
    $('.texture').removeClass("selected")
    currentTarget.toggleClass("selected");  
    this.model.set("texture", currentTarget.data("texture"))
  },
  changeColour: function() {
  var that = this;
  this.$('.customise').fadeOut(function() {
      
that.$('.colour_selector').fadeIn();  
  });
  },
  changeMonogram: function() {
    cart.setContext(this.model)    
    $('#cart').fadeOut(function() {
      $('#monograms').fadeIn()
   });
  },
  render: function() {
    var item_template = $('#cart_item').html();
    var compiled = _.template(item_template);
    var item_html = compiled(this.model.toJSON());
    
    this.$el.html(item_html);
    var cart_item_view = new CartItemView({model: this.model}).render().el
    
    $(cart_item_view).appendTo(this.$('td.second_col'));
    
    return this;
  }
});

// View listing the items in the cart, delegates to ItemView

var ItemsView = Backbone.View.extend({
  tagName: "table",
  attributes: { style: "border-collapse:collapse;border:1px dotted grey" },
  initialize: function() {
          this.listenTo(this.collection, "add", this.render)
          //this.listenTo(this.collection, "change", this.render)
  },
  render: function() {
     this.$el.empty();    
    
     var header = $('#cart_header').html();
     this.$el.html(header);
     this.collection.forEach(function(item) {
           this.$el.append(new ItemView({model: item}).render().el)
           this.$el.append("<tr>" + $('#break').html() + "</tr>")
     }, this);
      this.$el.append("</table>");
     return this;
  }
});

var PanelView = Backbone.View.extend({
  el: $('#product_page'),
  showCart: function() {
    $('#product_page_genesis').fadeOut();
    $('#buy').fadeOut();
    $('#nav').fadeOut();
    $('#product_page_genesis').fadeOut();
    $('#product_page').fadeOut(function() {
      $('#cart_page').fadeIn();
    })
  }
})

var MonogramView = Backbone.View.extend({
  el: $('#monograms'),
  events: {
          "click img": "selectMonogram"
  },
  selectMonogram: function(event) {
    var monogram = $(event.target).attr('id');
    var monogram_id = monogram.split("_")[1]
    cart.setMonogram(monogram_id)
    $('#monograms').fadeOut(function() {
      $('#cart').fadeIn()
    });
  }
})

var BuyButtonView = Backbone.View.extend({
  initialize: function() {
    this.setElement($('#buy'))
  },
  events: { 
    "click": "addToCart"
  },
  addToCart: function() {
    cart.get("items").add(thisProduct)
    pv.showCart();
  }
})

var ProductRouter = Backbone.Router.extend({
  routes: {
    "monograms": "chooseMonogram"
  }
});

// Setup and initialization

// Create a new cart or initialize an existing one
<% if (cart) { %>
  var cart = new Cart(<%- cart %>, { parse: true });
<% } else { %>
  var cart = new Cart({ parse: true }) 
<% }  %>

var thisProduct = new Product({id: "<%= _id %>", name: "<%= name %>", monogram: <%= monogram %>, colours: <%- JSON.stringify(colours) %>, quantity: 10, price: <%= price %>, guests: ["&hellip;","&hellip;","&hellip;","&hellip;","&hellip;","&hellip;","&hellip;","&hellip;","&hellip;","&hellip;"], texture: "plain" });

var iv = new ItemsView({collection: cart.get("items")})
$('#cart').html(iv.render().el);
var mv = new MonogramView();
var pv = new PanelView({collection: cart.get("items") });
var bbv = new BuyButtonView();

var prr = new ProductRouter();
Backbone.history.start();
  </script>