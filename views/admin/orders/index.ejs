<style type="text/css">
.lock:hover, .delete:hover { cursor:pointer;}
</style>
<div id="orders"></div>

<script>

var Order = Backbone.Model.extend({idAttribute: '_id'})

var Orders = Backbone.Collection.extend({
  model: Order,
  url: '/admin/orders'
})

var orders = new Orders( <%- JSON.stringify(orders) %>)


var OrderView = Backbone.View.extend({
  events: {
    'click .lock': 'lock',
    'click .delete': 'delete'
  },
  delete: function() {
    this.model.destroy();
    this.remove();
  },
  lock: function() {
    this.model.save({"locked": true, order_id: this.model.get("_id"), "_rev": this.model.get("_rev")}, { patch: true, success:function(success) {
      console.log("success")
    }, error: function(error) {
      console.log(error)
    }})
  },
  render: function() {
    var html= '<li><a href ="/products/' + this.model.id + '/edit">' + this.model.id + " </a>| " + this.model.get("status") + " | " + this.model.get("weight") + "|"
    if (this.model.get("locked")) {
    html = html + "LOCKED | "
    } else {
     html = html + '<span class="lock" style="color:red;">LOCK</span> | ';
    }
    html = html + '<span class="delete" style="color:blue;">DELETE</span></li>'
    this.$el.html(html)
    return this;
  }
})

var OrdersView = Backbone.View.extend({
  el: '#orders',
  render: function() {
    var orders = [];
    this.collection.forEach(function(order) {
      var order = new OrderView({model: order}).render().el
      orders.push(order)
    }, this)
    this.$el.html(orders)
  }
})

var orders_view = new OrdersView({collection:orders});
orders_view.render();


</script>