<html>
    <head>

    <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/1.8.0/jquery-1.8.0.min.js" type="text/javascript"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min.js" type="text/javascript"></script>
    <script src="http://code.jquery.com/ui/1.9.1/jquery-ui.js"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.2/backbone-min.js" type="text/javascript"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/handlebars.js/1.0.0.beta6/handlebars.min.js"></script>
    <script src="/javascripts/couchdb_attachments.js"></script>
    
    <script type="text/template" id="attachment_view">
        <img src="{{path "thumb"}}"/><a class="destroy">Destroy</a>
            <form method="POST" action="{{url}}" enctype="multipart/form-data" target="iframe_{{id}}">
            <input type="hidden" name="rev" value="{{get "_rev"}}"></input>
            {{get "_rev"}}
            <input type="file" name="thumb-{{id}}"></input><br/>
            <input type="file" name="medium-{{id}}"></input><br/>
            <input type="file" name="display-{{id}}"></input><br/>
            <input type="file" name="large-{{id}}"></input><br/>
            <input type="hidden" name="_method" value="put" />
            <input type="submit"></input>
            </form>
    </script>
    
    <script type="text/template" id="current_product_form">
        <form id="edit_product">
            <h1>{{ _id }}</h1>        
            <p><label for="price">Price:</label> <input type="text" name="price" value="{{price}}"></input></p>
            
            <select name="colours" multiple="true">
            {{#colours}}
            <option value="{{colour}}" {{selected}}>{{colour}}</option>
            {{/colours}}
            </select>
            <input type="submit" id="submitter">Submit</a>
        </form>
    </script>
    
<script type="text/javascript">

var colourList = ["Red", "VioletRed", "Firebrick", "HotPink", "DeepPink", "LightSalmon", "OrangeRed", "Orange", "Yellow", "Violet", "Fuschia", "MediumOrchid", "DarkViolet", "Purple", "Indigo", "GreenYellow", "LightSeaGreen","CornflowerBlue", "LimeGreen", "LightSkyBlue", "SteelBlue", "ForestGreen", "DeepSkyBlue", "Blue", "DarkGreen", "DodgerBlue", "MidnightBlue", "SaddleBrown", "Maroon"];
$(function() {    
    // MODELS
    var Product = Backbone.Model.CouchDB.extend({
        initialize: function() {
            Backbone.Model.CouchDB.prototype.initialize.call(this);
            var selectedColours = this.get("colours");
            var colours = _.map(colourList, function(colour) {

                   var matchingColour = _.any(selectedColours, function(selectedColour) {
                    return selectedColour == colour;
                })

                if (matchingColour) {
                    return {
                        colour: colour,
                        selected: "selected"
                    }
                }
                else {
                    return {
                        colour: colour,
                        selected: ""
                    }
                }
            });
            this.set("colours", colours);
        }
    });
    var Products = Backbone.Collection.extend({
        model: Product,
        url: "/products"
    });

    var ProductView = Backbone.View.extend({
        events: {
            'click': 'select'
        },
        select: function() {
            current_product_collection.reset(this.model);
        },
        render: function() {
            this.$el.html(this.model.id);
            return this;
        }
    });
    
    // VIEWS
    var ProductsView = Backbone.View.extend({
        el: '#products',
        render: function() {
            this.$el.empty();
            this.collection.forEach(function(product) {
                var productview = new ProductView({
                    model: product
                }).render().el
            this.$el.append(productview);
            }, this) 
            return this;
        }
    });
    
    var CurrentProductView = Backbone.View.extend({
        el: '#current_product',
        initialize: function() {
            this.collection.bind('reset', this.render, this);

        },
        events: { 
            'click #submitter': 'sendForm'
        },
        sendForm: function(e) {
            e.preventDefault();
            var product = this.collection.at(0);
            product.set({ price: this.$('input[name="price"]').val(), colours: this.$('select[name="colours"]').val()});
            product.save({}, { success: function(a, b, c) {
               console.log(a,b,c)
            }});
        },
        render: function() {
            var that = this;
            var json = this.collection.at(0).toJSON();
            var result = Handlebars.compile($('#current_product_form').html())(json);
            this.$el.html(result);
            this.$el.append(new AttachmentsView({collection: this.collection.at(0).attachments}).render().el);
                    
            return this;
        }
    })
    var AttachmentsView = Backbone.View.Attachment.extend({
        render: function() {
                var that = this;
            var attachments = this.collection.map(function(attachment) {
                return new AttachmentView({
                    model: attachment
                }).render().el;
            });
            this.$('#sortable').html(attachments);
            this.collection.forEach(function(attachment) {
                var iframe = $("<iframe name=\"iframe_" + attachment.id + "\" style=\"display:none;\"></iframe>");
                this.$el.append(iframe);
                var counter = 0;
                iframe.load(function() {
                    if (counter > 0) {
                        that.collection.belongs_to.fetch();
                    }
                    counter++;
                })
            }, this);
        return this;
    }
    });
    var AttachmentView = Backbone.View.extend({
        initialize: function() {
             this.model.bind('change', this.render, this);
        },
        events: { 
            'click .destroy' : 'remove'  
        },
        remove: function(a,b) {
            var that = this;
          this.model.destroy({data: "_rev=" + that.model.get("_rev") }); 
        },
        render: function() {
            var that= this;
            var result = Handlebars.compile($('#attachment_view').html())(this.model);
            this.el.id = this.model.id;
            this.$el.html(result);
            return this;
        }
    })
    
    var CurrentProductCollection = Backbone.Collection.extend({});
    
    var product_types = <%- JSON.stringify(product_types) %>;
    var themes = <%- JSON.stringify(themes) %>;
    var products = new Products( <%- JSON.stringify(products) %>, {parse: true} );
    
    var current_product_collection = new CurrentProductCollection(products.at(0));
    var cpv = new CurrentProductView({
        collection: current_product_collection
    });

    cpv.render();

    new ProductsView({
        collection: products
    }).render();
    
})

</script>
</head>
<body>

<div id="products"></div>

<h2>Current Product:</h2>
<div id="current_product"></div>

</body>
</html>