<html>
    <head>

    <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/1.8.0/jquery-1.8.0.min.js" type="text/javascript"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min.js" type="text/javascript"></script>
    <script src="http://code.jquery.com/ui/1.9.1/jquery-ui.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.10/backbone-min.js" type="text/javascript"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/handlebars.js/1.0.0.beta6/handlebars.min.js"></script>
    <script src="/javascripts/backbone_syphon.js"></script>
   
   <script src="/javascripts/attachments.js"></script>
    
    <script type="text/template" id="current_product_form">
                <form>
            <h1>{{ id }}</h1>        
            <p><label for="price">Price:</label> <input type="text" name="price" value="{{price}}"></input></p>
            <p><label for="price">Description:</label> <textarea name="description">{{description}}</textarea></p>
            <p><label for="buy_it_now_id">Buy-it-now listing item number:</label> <input type="text" name="buy_it_now_id" value="{{buy_it_now_id}}"></input></p>
            <p><label for="buy_it_now_price">Buy-it-now price:</label> <input type="text" name="buy_it_now_price" value="{{buy_it_now_price}}"></input></p>
            <select name="colours" multiple="true">
            {{#colours}}
            <option value="{{colour}}" {{selected}}>{{colour}}</option>
            {{/colours}}
            </select>
            <input type="submit">Submit</a>
            </form>
    </script>
    
<script type="text/javascript">

var colourList = ["Black", "Red", "VioletRed", "Firebrick", "HotPink", "DeepPink", "LightSalmon", "OrangeRed", "Orange", "Yellow", "Violet", "Fuschia", "MediumOrchid", "DarkViolet", "Purple", "Indigo", "GreenYellow", "LightSeaGreen","CornflowerBlue", "LimeGreen", "LightSkyBlue", "SteelBlue", "ForestGreen", "DeepSkyBlue", "Blue", "DarkGreen", "DodgerBlue", "MidnightBlue", "SaddleBrown", "Maroon"];

$(function() {    
    // MODELS
    var Product = Backbone.Model.CouchDB.extend({
        urlRoot: "/products",
        defaults: { "type": "product" },
        attachment_types: ["thumb","medium","display","large"],
        initialize: function() {
            var selectedColours = this.get("colours");
            var colours = _.map(colourList, function(colour) {
                   var matchingColour = _.any(selectedColours, function(selectedColour) {
                    return selectedColour == colour;
                })
                if (matchingColour) {
                    return {
                        colour: colour,
                        selected: "selected"
                    }
                }
                else {
                    return {
                        colour: colour,
                        selected: ""
                    }
                }
            });
            this.set("colours", colours);
        }
    });
    var Products = Backbone.Collection.extend({
        model: Product,
        url: "/products"
    });
    
    // VIEWS
    var ProductsView = Backbone.View.extend({
        initialize: function() {
            this.collection.on("add", this.render, this)  
        },
        el: '#products',
        events: {
            'click #addnew': 'addNew'
        },
        addNew: function() {
            var product = new Product({name: $('input').val()});
            this.collection.add(product);
        },
        render: function() {
            this.$el.empty();
            this.collection.forEach(function(product) {
                var productview = new ProductView({
                    model: product
                }).render().el
            this.$el.append(productview);
            }, this) 
            this.$el.append("<a id='addnew'>Add new</a> <input type='text' id='new_id'>")
            return this;
        }
    });
    
    var AttachView = Backbone.View.Attachment.extend({
        initialize: function() {
            this.model.on("change:binary", this.loadAttachment, this)
            this.model.on("change", this.render, this)
        },
        loadAttachment: function() {
            var that = this;
            var reader = new FileReader();
            var img = new Image();
            img.onload = function() {
                that.model.set("width", this.width)
                that.model.set("height", this.height)
            }
            reader.onload = function(target) {
                var data = event.target.result
                that.model.set("dataURL", data);
                img.src = data;
            }
            reader.readAsDataURL(this.model.get("binary"))
        },
        tagName: "td",
        className: "attachment",
        render: function() {
            this.$el.html(this.model.id + " - " + this.model.get("width") + "x" + this.model.get("height") + "<br/><img src='" + this.model.url() + "' width='120' height='90' />")
            return this;
        }
    })
    
    var ProductView = Backbone.View.extend({
        events: {
            'click': 'select'
        },
        select: function() {
            var cpv = new CurrentProductView({model:this.model, attachmentView: AttachView});
            $('#cpv').html(cpv.render().el)
        },
        render: function() {
            this.$el.html(this.model.get("name"));
            return this;
        }
    });
    
    var CurrentProductView = Backbone.View.CouchDB.extend({
        events: { 
            'click input[type=submit]': 'sendForm',
            'click .addmore': 'addMore',
            'click .delete': 'remove'
        },
        remove: function() {
          this.model.destroy();  
        },
        addMore: function() {
            this.addAttachment();
        },
        sendForm: function(e) {
            e.preventDefault();
           this.model.set(Backbone.Syphon.serialize(this))
           this.model.save()
        },
        render: function() {
            var result = Handlebars.compile($('#current_product_form').html())(this.model.toJSON());
            this.$el.html(result);
          this.$el.append("<table>")
            this.$el.append(this.buildAttachments({groupEl: 'tr'}))
            this.$el.append("</table>")
            this.$el.append("<a class='addmore'>Add more</a>")
            this.$el.append("<a class='delete'>Delete</a>" )
            return this;
        }
    })
    var product_types = <%- JSON.stringify(product_types) %>;
    var themes = <%- JSON.stringify(themes) %>;
    var products = new Products( <%- JSON.stringify(products) %>, {parse: true} );
    
    new ProductsView({
        collection: products
    }).render();
})

</script>
<style type="text/css">

    .attachment { text-align:center;}
</style>
</head>
<body>
<div id="products"></div>
<div id="cpv"></div>
</body>
</html>