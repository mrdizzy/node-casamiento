<html>
    <head>

    <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/1.8.0/jquery-1.8.0.min.js" type="text/javascript"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min.js" type="text/javascript"></script>
    <script src="http://code.jquery.com/ui/1.9.1/jquery-ui.js"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.2/backbone-min.js" type="text/javascript"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/handlebars.js/1.0.0.beta6/handlebars.min.js"></script>
    <script src="/javascripts/couchdb_attachments.js"></script>
    
    <script type="text/template" id="current_product_form">
        <form id="edit_product">
            <h1>{{ _id }}</h1>        
            <p><label for="price">Price:</label> <input type="text" name="price" value="{{price}}"></input></p>
            <input type="submit" id="submitter">Submit</a>
        </form>
    </script>
    
<script type="text/javascript">

$(function() {    
    // MODELS
    var Product = Backbone.Model.CouchDB.extend({
        productType: function() {
            this.product_type = this.product_type || this.id.split("-")[1]  
            return this.product_type;
        },
        theme: function() {
            this.theme = this.theme || this.id.split("-")[0]   
            return this.theme
        }
    });
    var Products = Backbone.Collection.extend({
        model: Product,
        url: "/products"
    });
    
        var ProductView = Backbone.View.extend({
                events: { 'click': 'select' },
        select: function() {
             current_product_collection.reset(this.model);
        },
        render: function() {
            this.$el.html(this.model.id);
            return this;
        }
    });
    
    // VIEWS
    var ProductsView = Backbone.View.extend({
        el: '#products',
        render: function() {
            this.$el.empty();
            this.collection.forEach(function(product) {
                var productview = new ProductView({
                    model: product
                }).render().el
            this.$el.append(productview);
            }, this) 
            return this;
        }
    });
    
    var CurrentProductView = Backbone.View.extend({
        el: '#current_product',
        initialize: function() {
            this.collection.bind('reset', this.render, this);
        },
        events: { 
            'click #submitter': 'sendForm'
        },
        sendForm: function(e) {
            e.preventDefault();
            this.collection.at(0).set({ price: this.$('input[name="price"]').val(), colours: this.$('input[name="colours"]').val()});
            this.collection.at(0).save({}, { success: function(a, b, c) {
                console.log(a,b,c)
            }});
        },
        render: function() {
            var result = Handlebars.compile($('#current_product_form').html())(this.collection.at(0).toJSON());
            this.$el.html(result);
            this.$el.append(new AttachmentsView({collection: this.collection.at(0).attachments}).render().el);
            return this;
        }
    })
    
    var AttachmentsView = Backbone.View.extend({
        render: function() {
            var attachments = this.collection.map(function(attachment) {
                return new AttachmentView({model: attachment}).render().el; 
            });
            var that = this;
            this.$el.html(attachments);
            this.$el.sortable({update: function(a,b) {
                that.collection.belongs_to.set("attachments_order", that.$el.sortable("toArray"));
                }});
            return this;
        }
    });
    
    var AttachmentView = Backbone.View.extend({
        events: { 
            'click .destroy' : 'remove'  
        },
        remove: function(a,b) {
            var that = this;
          this.model.destroy({data: "_rev=" + that.model.get("_rev") }); 
        },
        render: function() {
            this.el.id = this.model.id;
            var html = "<img src=\"" + this.model.path("thumb") + "\" /><a class=\"destroy\">Destroy</a>"
            var form = "<form method=\"POST\" action=\"" + this.model.url() + "\" enctype=\"multipart/form-data\" target=\"iframe_" + this.model.id + "\">" +
            "<input type=\"file\" name=\"thumb\"></input>"+
            "<input type=\"hidden\" name=\"_method\" value=\"put\" />"+
            "<input type=\"submit\"></input>" +
            "</form>"; 
            
            var iframe = "<iframe name=\"iframe_" + this.model.id + "\" style=\"display: none;\"></iframe>";
            this.$el.html(html + form + iframe);
            return this;
        }
    })
    
    var CurrentProductCollection = Backbone.Collection.extend({});
    
    var product_types = <%- JSON.stringify(product_types) %>;
    var themes = <%- JSON.stringify(themes) %>;
    var products = new Products( <%- JSON.stringify(products) %>, {parse: true} );
    
    var current_product_collection = new CurrentProductCollection(products.at(0));
    var cpv = new CurrentProductView({
        collection: current_product_collection
    });

    cpv.render();

    new ProductsView({
        collection: products
    }).render();
})

</script>
</head>
<body>

<div id="products"></div>

<h2>Current Product:</h2>
<div id="current_product"></div>

</body>
</html>