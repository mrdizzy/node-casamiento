{"filter":false,"title":"products.js","tooltip":"/controllers/products.js","ace":{"folds":[],"scrolltop":53,"scrollleft":0,"selection":{"start":{"row":37,"column":46},"end":{"row":37,"column":46},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":4,"state":"start","mode":"ace/mode/javascript"}},"hash":"1688bdc492705b01f5b1436ba1ab06173194aff4","undoManager":{"mark":32,"position":32,"stack":[[{"start":{"row":75,"column":28},"end":{"row":76,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":76,"column":0},"end":{"row":76,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":76,"column":4},"end":{"row":76,"column":5},"action":"insert","lines":["i"],"id":3}],[{"start":{"row":76,"column":5},"end":{"row":76,"column":6},"action":"insert","lines":["f"],"id":4}],[{"start":{"row":76,"column":6},"end":{"row":76,"column":8},"action":"insert","lines":["()"],"id":5}],[{"start":{"row":76,"column":7},"end":{"row":76,"column":8},"action":"insert","lines":["e"],"id":6}],[{"start":{"row":76,"column":8},"end":{"row":76,"column":9},"action":"insert","lines":["r"],"id":7}],[{"start":{"row":76,"column":9},"end":{"row":76,"column":10},"action":"insert","lines":["r"],"id":8}],[{"start":{"row":76,"column":3},"end":{"row":76,"column":11},"action":"remove","lines":[" if(err)"],"id":26}],[{"start":{"row":76,"column":3},"end":{"row":77,"column":30},"action":"remove","lines":["","    console.log(docs[0].value)"],"id":27}],[{"start":{"row":23,"column":0},"end":{"row":23,"column":6},"action":"insert","lines":["      "],"id":28},{"start":{"row":23,"column":49},"end":{"row":23,"column":50},"action":"insert","lines":[" "]},{"start":{"row":23,"column":51},"end":{"row":24,"column":8},"action":"insert","lines":["","        "]},{"start":{"row":24,"column":73},"end":{"row":25,"column":6},"action":"insert","lines":["","      "]},{"start":{"row":26,"column":0},"end":{"row":26,"column":6},"action":"insert","lines":["      "]},{"start":{"row":78,"column":0},"end":{"row":78,"column":3},"action":"remove","lines":["   "]},{"start":{"row":108,"column":0},"end":{"row":108,"column":1},"action":"remove","lines":[" "]}],[{"start":{"row":39,"column":1},"end":{"row":181,"column":1},"action":"remove","lines":["","","exports.index = function(req, res) {","","  db.view('tags/except_christmas', function(err, docs) {","    var result = _.map(docs.toArray(), function(product) {","","      for (var i = 1; i < 5; i++) {","        var background;","        if (background = product[\"background-\" + i]) {","          var divs = background.split(\"</div>\");","          divs = _.map(divs, function(div) {","            if (!(/class=\"nocolor\"/.test(div)))","              div = div.replace(/style=\"/g, 'style=\"background-color:' + product.colours[1] + \";\");","            return div","          })","          product[\"background-\" + i] = divs.join(\"</div>\")","        }","      }","      return product","    })","    var groups = inGroupsOf(result, 11);","    groups = _.map(groups, function(group) {","      return inGroupsOf(group, 6);","    });","","    res.render(\"products/index.ejs\", {","      locals: {","        groups: groups","      }","    });","  });","}","","exports.show = function(req, res, next) {","  var id = req.params.product;","  db.view('all/products_without_attachments', {","    key: id","  }, function(error, docs) {","","    if (docs.length == 0) {","      var myerr = new Error('Record not found!');","      return next(myerr); // <---- pass it, not throw it","    }","    else {","      db.view(\"all/fonts_by_id\", function(error, fonts_response) {","        var fonts = [];","        fonts_response.toArray().forEach(function(font) {","          fonts.push(font.id)","        })","        res.render('products/show/show.ejs', {","          locals: {","            fonts: fonts,","            product: docs[0].value // First record   ","          }","        });","      })","    }","  });","};","","exports.edit = function(req, res) {","  var order_id = req.params.product;","  db.get(order_id, function(err, doc) {","    if (err) {","      console.log(err)","    }","    else {","      db.view(\"all/fonts_by_id\", function(error, fonts_response) {","        var fonts = [];","        fonts_response.toArray().forEach(function(font) {","          fonts.push(font.id)","        })","        var product_id = doc.product_id;","        doc._id = product_id;","        doc.order_id = order_id;","","        res.render('products/edit/edit.ejs', {","          locals: {","            fonts: fonts,","            product: doc","          }","        });","      })","    }","  })","","}","","exports.update = exports.create = function(req, res) {","","  if (req.product) {","    var rev = req.product.rev,","      id = req.product.id;","    req.body._rev = rev;","  }","  else {","    var id = req.body._id","  }","  //var svg = req.body.svg.toString() is used to \"copy\" the string as we are about to delete it in the next line","  if (req.body.svg) {","    var svg = req.body.svg.toString();","    delete req[\"body\"].svg;","  }","  db.save(id, rev, req.body, function(err, documents) {","    console.log(err, documents)","    var new_product = req.body;","    new_product._rev = documents.rev;","    if (err) {","      console.log(\"Unable to save main document\", err, documents)","      res.status(500);","      res.end();","    }","    else {","      if (svg) {","        var svg_id = \"svg__\" + documents.id;","        db.get(svg_id, function(e, record) {","          if (record) var svg_rev = record._rev;","          db.save(svg_id, svg_rev, {","            _attachments: {","              svg: {","                'Content-Type': \"image/xml+svgz\",","                data: svg","              }","            }","          }, function(anerror, done) {","            if (anerror) {","              console.log(\"Error saving attachment of SVG\", anerror)","              res.status(500);","              res.end();","            }","            else {","              res.json(new_product)","            }","          })","        })","      }","      else {","        res.json(new_product)","      }","    }","  });","}"],"id":29}],[{"start":{"row":4,"column":0},"end":{"row":146,"column":1},"action":"insert","lines":["","","exports.index = function(req, res) {","","  db.view('tags/except_christmas', function(err, docs) {","    var result = _.map(docs.toArray(), function(product) {","","      for (var i = 1; i < 5; i++) {","        var background;","        if (background = product[\"background-\" + i]) {","          var divs = background.split(\"</div>\");","          divs = _.map(divs, function(div) {","            if (!(/class=\"nocolor\"/.test(div)))","              div = div.replace(/style=\"/g, 'style=\"background-color:' + product.colours[1] + \";\");","            return div","          })","          product[\"background-\" + i] = divs.join(\"</div>\")","        }","      }","      return product","    })","    var groups = inGroupsOf(result, 11);","    groups = _.map(groups, function(group) {","      return inGroupsOf(group, 6);","    });","","    res.render(\"products/index.ejs\", {","      locals: {","        groups: groups","      }","    });","  });","}","","exports.show = function(req, res, next) {","  var id = req.params.product;","  db.view('all/products_without_attachments', {","    key: id","  }, function(error, docs) {","","    if (docs.length == 0) {","      var myerr = new Error('Record not found!');","      return next(myerr); // <---- pass it, not throw it","    }","    else {","      db.view(\"all/fonts_by_id\", function(error, fonts_response) {","        var fonts = [];","        fonts_response.toArray().forEach(function(font) {","          fonts.push(font.id)","        })","        res.render('products/show/show.ejs', {","          locals: {","            fonts: fonts,","            product: docs[0].value // First record   ","          }","        });","      })","    }","  });","};","","exports.edit = function(req, res) {","  var order_id = req.params.product;","  db.get(order_id, function(err, doc) {","    if (err) {","      console.log(err)","    }","    else {","      db.view(\"all/fonts_by_id\", function(error, fonts_response) {","        var fonts = [];","        fonts_response.toArray().forEach(function(font) {","          fonts.push(font.id)","        })","        var product_id = doc.product_id;","        doc._id = product_id;","        doc.order_id = order_id;","","        res.render('products/edit/edit.ejs', {","          locals: {","            fonts: fonts,","            product: doc","          }","        });","      })","    }","  })","","}","","exports.update = exports.create = function(req, res) {","","  if (req.product) {","    var rev = req.product.rev,","      id = req.product.id;","    req.body._rev = rev;","  }","  else {","    var id = req.body._id","  }","  //var svg = req.body.svg.toString() is used to \"copy\" the string as we are about to delete it in the next line","  if (req.body.svg) {","    var svg = req.body.svg.toString();","    delete req[\"body\"].svg;","  }","  db.save(id, rev, req.body, function(err, documents) {","    console.log(err, documents)","    var new_product = req.body;","    new_product._rev = documents.rev;","    if (err) {","      console.log(\"Unable to save main document\", err, documents)","      res.status(500);","      res.end();","    }","    else {","      if (svg) {","        var svg_id = \"svg__\" + documents.id;","        db.get(svg_id, function(e, record) {","          if (record) var svg_rev = record._rev;","          db.save(svg_id, svg_rev, {","            _attachments: {","              svg: {","                'Content-Type': \"image/xml+svgz\",","                data: svg","              }","            }","          }, function(anerror, done) {","            if (anerror) {","              console.log(\"Error saving attachment of SVG\", anerror)","              res.status(500);","              res.end();","            }","            else {","              res.json(new_product)","            }","          })","        })","      }","      else {","        res.json(new_product)","      }","    }","  });","}"],"id":30}],[{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"remove","lines":["",""],"id":31}],[{"start":{"row":191,"column":4},"end":{"row":192,"column":0},"action":"remove","lines":["",""],"id":32}],[{"start":{"row":92,"column":54},"end":{"row":93,"column":0},"action":"remove","lines":["",""],"id":33}],[{"start":{"row":5,"column":36},"end":{"row":6,"column":0},"action":"remove","lines":["",""],"id":34}],[{"start":{"row":37,"column":29},"end":{"row":37,"column":30},"action":"insert","lines":[" "],"id":35}],[{"start":{"row":37,"column":30},"end":{"row":37,"column":31},"action":"insert","lines":["|"],"id":36}],[{"start":{"row":37,"column":31},"end":{"row":37,"column":32},"action":"insert","lines":["|"],"id":37}],[{"start":{"row":37,"column":32},"end":{"row":37,"column":33},"action":"insert","lines":[" "],"id":38}],[{"start":{"row":37,"column":33},"end":{"row":37,"column":34},"action":"insert","lines":["r"],"id":39}],[{"start":{"row":37,"column":34},"end":{"row":37,"column":35},"action":"insert","lines":["e"],"id":40}],[{"start":{"row":37,"column":35},"end":{"row":37,"column":36},"action":"insert","lines":["q"],"id":41}],[{"start":{"row":37,"column":36},"end":{"row":37,"column":37},"action":"insert","lines":["."],"id":42}],[{"start":{"row":37,"column":37},"end":{"row":37,"column":38},"action":"insert","lines":["p"],"id":43}],[{"start":{"row":37,"column":38},"end":{"row":37,"column":39},"action":"insert","lines":["a"],"id":44}],[{"start":{"row":37,"column":39},"end":{"row":37,"column":40},"action":"insert","lines":["r"],"id":45}],[{"start":{"row":37,"column":40},"end":{"row":37,"column":41},"action":"insert","lines":["a"],"id":46}],[{"start":{"row":37,"column":41},"end":{"row":37,"column":42},"action":"insert","lines":["m"],"id":47}],[{"start":{"row":37,"column":42},"end":{"row":37,"column":43},"action":"insert","lines":["s"],"id":48}],[{"start":{"row":37,"column":43},"end":{"row":37,"column":44},"action":"insert","lines":["."],"id":49}],[{"start":{"row":37,"column":44},"end":{"row":37,"column":45},"action":"insert","lines":["i"],"id":50}],[{"start":{"row":37,"column":45},"end":{"row":37,"column":46},"action":"insert","lines":["d"],"id":51}]]},"timestamp":1467495364958}